version: "3.7"

networks:
  kafka-net:
    name: kafka-net
    driver: bridge

services:
  zookeeper:
    image: debezium/zookeeper:2.5
    container_name: zookeeper
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "2181:2181"

  kafka:
    image: debezium/kafka:2.5
    container_name: kafka
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      ZOOKEEPER_CONNECT: "zookeeper:2181"
      BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - "kafka"

  postgres-orders:
    image: debezium/postgres
    container_name: postgres-orders
    restart: "always"
    environment:
      POSTGRES_DB: "orders"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "pass"
    networks:
      - kafka-net
    ports:
      - "5416:5432"

  postgres-payments:
    image: debezium/postgres
    container_name: postgres-payments
    restart: "always"
    environment:
      POSTGRES_DB: "payments"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "pass"
    networks:
      - kafka-net
    ports:
      - "5415:5432"

  debezium-connect:
    image: debezium/connect:2.5
    container_name: debezium-connect
    restart: "no"
    environment:
      GROUP_ID: 1
      BOOTSTRAP_SERVERS: "kafka:29092"
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
    ports:
      - "8083:8083"
    networks:
      - kafka-net
    depends_on:
      - kafka
      - postgres-orders
